voxel_size: [0.075, 0.075, 0.2]
point_cloud_range: [-54.0, -54.0, -5.0, 54.0, 54.0, 3.0]

model:
  encoders:
    lidar:
      voxelize:
        max_num_points: 10
        point_cloud_range: ${point_cloud_range}
        voxel_size: ${voxel_size}
        max_voxels: [120000, 160000]
      backbone:
        type: SparseEncoder
        in_channels: 5
        sparse_shape: [1440, 1440, 41]
        output_channels: 128
        order:
          - conv
          - norm
          - act
        encoder_channels:
          - [16, 16, 32]
          - [32, 32, 64]
          - [64, 64, 128]
          - [128, 128]
        encoder_paddings:
          - [0, 0, 1]
          - [0, 0, 1]
          - [0, 0, [1, 1, 0]]
          - [0, 0]
        block_type: basicblock
  heads:
    object:
      train_cfg:
        grid_size: [1440, 1440, 41]
      test_cfg:
        grid_size: [1440, 1440, 41]



optimizer:
  type: AdamW
  lr: 1.0e-4
  weight_decay: 0.01

optimizer_config:
  grad_clip:
    max_norm: 35
    norm_type: 2


lr_config:
  policy: CosineAnnealing
  warmup: linear
  warmup_iters: 8828
  warmup_ratio: 0.33333333
  min_lr_ratio: 1.0e-6 # ---zhu---#

momentum_config:
  policy: cyclic

gt_paste_stop_epoch: 0
max_epochs: 20
data:
  samples_per_gpu: 4  # batchsize_changing
  workers_per_gpu: 8

load_from: /home/adas4gpu1/Documents/bevfusion/run_dir/voxel/voxel_large_only_long/epoch_80.pth
#resume_from: /home/adas4gpu1/Documents/bevfusion/run_dir/voxel/voxel_large_only_long/epoch_80.pth
resume_from: null
